<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>const int plane_num = 2, max_planes_at_term = 1;
chan to_start_wait[plane_num], to_runway, to_terminal[plane_num], good_try[plane_num], bad_try[plane_num];
struct{
    bool free;
    int plane;
    }runway_data;
int [0, max_planes_at_term]planes_at_term = 0;
int terminal_plane[plane_num];
</declaration>
	<template>
		<name x="9" y="9">plane</name>
		<parameter>const int me</parameter>
		<declaration>clock cp;</declaration>
		<location id="id0" x="-986" y="-1326">
			<name x="-1037" y="-1360">wait_at_starting</name>
			<label kind="invariant" x="-977" y="-1317">cp &lt;= 20</label>
		</location>
		<location id="id1" x="-1360" y="-1326">
			<name x="-1385" y="-1360">starting</name>
		</location>
		<location id="id2" x="-1122" y="-1598">
			<name x="-1164" y="-1632">to_terminal_s</name>
			<urgent/>
		</location>
		<location id="id3" x="-850" y="-1598">
			<name x="-892" y="-1632">on_terminal</name>
			<label kind="invariant" x="-935" y="-1589">cp &lt;= 100</label>
		</location>
		<location id="id4" x="-1326" y="-1598">
			<name x="-1351" y="-1632">landing</name>
		</location>
		<location id="id5" x="-1666" y="-1598">
			<name x="-1700" y="-1632">wait_in_air</name>
			<label kind="invariant" x="-1657" y="-1589">cp &lt;= 10</label>
		</location>
		<location id="id6" x="-1768" y="-1598">
			<name x="-1785" y="-1632">idle</name>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-1326" y="-1547">bad_try[me]?</label>
			<label kind="assignment" x="-1657" y="-1538">cp = 0</label>
			<nail x="-1326" y="-1496"/>
			<nail x="-1666" y="-1496"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-1351" y="-1300">bad_try[me]?</label>
			<label kind="assignment" x="-977" y="-1266">cp = 0</label>
			<nail x="-1360" y="-1224"/>
			<nail x="-986" y="-1224"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-1215" y="-1283">runway_data.free == false</label>
			<label kind="assignment" x="-977" y="-1266">cp = 0</label>
			<nail x="-1224" y="-1326"/>
			<nail x="-1224" y="-1224"/>
			<nail x="-986" y="-1224"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-1275" y="-1377">runway_data.free == true</label>
			<label kind="synchronisation" x="-1275" y="-1360">to_runway!</label>
			<label kind="assignment" x="-1275" y="-1343">runway_data.plane = me</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id6"/>
			<label kind="guard" x="-1751" y="-1377">cp &gt;= 20 and
cp &lt;= 50</label>
			<label kind="synchronisation" x="-1750" y="-1343">good_try[me]?</label>
			<nail x="-1768" y="-1326"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="-1555" y="-1555">runway_data.free == false</label>
			<label kind="assignment" x="-1657" y="-1538">cp = 0</label>
			<nail x="-1564" y="-1598"/>
			<nail x="-1564" y="-1496"/>
			<nail x="-1666" y="-1496"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="assignment" x="-1751" y="-1615">cp = 0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="select" x="-1054" y="-1649">r:int[0,1]</label>
			<label kind="synchronisation" x="-1054" y="-1632">to_terminal[r]!</label>
			<label kind="assignment" x="-1054" y="-1615">terminal_plane[r] = me</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="-926" y="-1513">cp &gt;= 40</label>
			<label kind="synchronisation" x="-986" y="-1496">to_start_wait[me]?</label>
			<label kind="assignment" x="-909" y="-1479">cp = 0</label>
			<nail x="-850" y="-1326"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="-1275" y="-1649">cp &gt;= 20 and
cp &lt;= 50</label>
			<label kind="synchronisation" x="-1275" y="-1615">good_try[me]?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="guard" x="-1555" y="-1649">runway_data.free == true</label>
			<label kind="synchronisation" x="-1555" y="-1632">to_runway!</label>
			<label kind="assignment" x="-1555" y="-1615">runway_data.plane = me</label>
		</transition>
	</template>
	<template>
		<name>runway</name>
		<declaration>clock cr;
int successful;</declaration>
		<location id="id7" x="-1122" y="-850">
			<name x="-1147" y="-884">landing</name>
			<label kind="invariant" x="-1147" y="-833">cr &lt;= 60</label>
		</location>
		<location id="id8" x="-1360" y="-850">
			<name x="-1370" y="-884">idle</name>
		</location>
		<location id="id9" x="-1598" y="-850">
			<name x="-1623" y="-884">initialize</name>
			<committed/>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id7"/>
			<target ref="id9"/>
			<label kind="guard" x="-1564" y="-714">cr &gt; 50</label>
			<label kind="synchronisation" x="-1564" y="-697">bad_try[runway_data.plane]!</label>
			<nail x="-1054" y="-850"/>
			<nail x="-1054" y="-680"/>
			<nail x="-1598" y="-680"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id9"/>
			<label kind="guard" x="-994" y="-714">cr &gt;= 10 and
cr &lt;= 50 and
successful != false</label>
			<label kind="synchronisation" x="-994" y="-663">good_try[runway_data.plane]!</label>
			<nail x="-748" y="-850"/>
			<nail x="-748" y="-646"/>
			<nail x="-1598" y="-646"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id9"/>
			<label kind="guard" x="-1564" y="-799">cr &lt; 10 or
successful == false</label>
			<label kind="synchronisation" x="-1564" y="-765">bad_try[runway_data.plane]!</label>
			<nail x="-1054" y="-850"/>
			<nail x="-1054" y="-748"/>
			<nail x="-1598" y="-748"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="select" x="-1326" y="-935">r:int[0,5]</label>
			<label kind="synchronisation" x="-1326" y="-918">to_runway?</label>
			<label kind="assignment" x="-1326" y="-901">cr = 0, 
successful = r,
runway_data.free = false</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="assignment" x="-1564" y="-867">runway_data.free = true</label>
		</transition>
	</template>
	<template>
		<name>terminal</name>
		<parameter>const int me</parameter>
		<declaration>clock ct;
int[0, 2] count;</declaration>
		<location id="id10" x="-714" y="-212">
			<name x="-697" y="-229">on_tmp_terminal</name>
			<label kind="invariant" x="-697" y="-212">ct &lt;= 30</label>
		</location>
		<location id="id11" x="-340" y="-442">
			<name x="-374" y="-476">on_terminal</name>
			<label kind="invariant" x="-331" y="-425">ct &lt;= 50 - 10 * count</label>
		</location>
		<location id="id12" x="-714" y="-442">
			<name x="-748" y="-476">test_place</name>
			<urgent/>
		</location>
		<location id="id13" x="-1054" y="-442">
			<name x="-1071" y="-476">wait</name>
			<label kind="invariant" x="-1045" y="-433">ct &lt;= 10</label>
		</location>
		<location id="id14" x="-1224" y="-442">
			<name x="-1241" y="-476">idle</name>
		</location>
		<init ref="id14"/>
		<transition>
			<source ref="id10"/>
			<target ref="id14"/>
			<label kind="guard" x="-705" y="-178">ct &gt;= 10</label>
			<label kind="synchronisation" x="-1079" y="-153">to_start_wait[terminal_plane[me]]!</label>
			<nail x="-714" y="-136"/>
			<nail x="-1224" y="-136"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-705" y="-289">planes_at_term == max_planes_at_term and
count == 2</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id14"/>
			<label kind="guard" x="-578" y="-170">ct &gt;= 20 - 5 * count</label>
			<label kind="synchronisation" x="-1079" y="-153">to_start_wait[terminal_plane[me]]!</label>
			<label kind="assignment" x="-578" y="-153">--planes_at_term</label>
			<nail x="-340" y="-136"/>
			<nail x="-1224" y="-136"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-646" y="-476">planes_at_term &lt; max_planes_at_term</label>
			<label kind="assignment" x="-646" y="-459">++planes_at_term</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="-1045" y="-374">planes_at_term == max_planes_at_term and
count &lt; 2</label>
			<label kind="assignment" x="-1045" y="-340">ct = 0,
++count</label>
			<nail x="-714" y="-306"/>
			<nail x="-1054" y="-306"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-918" y="-459">ct &gt;= 5</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-1198" y="-493">to_terminal[me]?</label>
			<label kind="assignment" x="-1198" y="-476">ct = 0,
count = 0</label>
		</transition>
	</template>
	<system>p0 = plane(0);
p1 = plane(1);
t0 = terminal(0);
t1 = terminal(1);
system p0, p1, runway, t0, t1;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (p0.wait_in_air and p1.wait_in_air)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (p0.landing and p1.landing)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (p0.on_terminal and p1.on_terminal)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (p0.wait_at_starting and p1.wait_at_starting)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (p0.starting and p1.starting)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (not(runway.idle) and (p0.landing or p1.landing or p0.starting or p1.starting))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (runway.idle and (p0.landing or p1.landing or p0.starting or p1.starting))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (not(t0.idle or t1.idle) and not(p0.on_terminal or p1.on_terminal))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (t0.test_place and t0.count &gt; 2)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (t0.test_place and planes_at_term &gt; max_planes_at_term)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (runway.cr &gt;= 20 and runway.cr &lt;= 50)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; ((runway.cr &gt;= 20 and runway.cr &lt;= 50) and runway.successful &gt; 0)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (runway.successful == 0)
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
